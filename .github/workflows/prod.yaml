name: Build and Push to GCP
concurrency: production
on:
  push:
    branches:
      - main
      - docker
env:
  DOCKER_REGISTRY: ${{ vars.REGION }}-docker.pkg.dev/${{ inputs.GCP_PROJECT_ID }}/docker-private/${{ github.event.repository.name }}
jobs:
  build:
    name: Docker Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      DOCKER_IMAGE: ${{ steps.outputImage.outputs.DOCKER_IMAGE }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}
          token_format: access_token
          access_token_lifetime: 300s

      - name: Login to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get image tags
        id: dockerImage
        run: |
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          no-cache: false
          tags: |
            ${{ env.DOCKER_REGISTRY }}:latest
            ${{ env.DOCKER_REGISTRY }}:${{ env.SHORT_SHA }}
          build-args: ${{ inputs.BUILD_ARGS }}
          target: ${{ inputs.BUILD_TARGET }}

      - name: Output image tags
        id: outputImage
        run: |
          echo "DOCKER_IMAGE=${{ env.DOCKER_REGISTRY }}:${{ env.SHORT_SHA }}" >> $GITHUB_OUTPUT